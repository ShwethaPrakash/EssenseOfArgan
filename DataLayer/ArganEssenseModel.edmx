<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx Version="3.0" xmlns:edmx="http://schemas.microsoft.com/ado/2009/11/edmx">
  <!-- EF Runtime content -->
  <edmx:Runtime>
    <!-- SSDL content -->
    <edmx:StorageModels>
    <Schema Namespace="EssenseOfArganModel.Store" Provider="System.Data.SqlClient" ProviderManifestToken="2012" Alias="Self" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
        <!--Errors Found During Generation:
warning 6002: The table/view 'EssenseOfArgan.dbo.TestCategories' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
        <EntityType Name="TestCategories">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="Name" Type="varchar" MaxLength="255" />
        </EntityType>
        <!--Errors Found During Generation:
warning 6002: The table/view 'EssenseOfArgan.dbo.TestOrderProducts' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
        <EntityType Name="TestOrderProducts">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="OrderId" Type="int" />
          <Property Name="ProductId" Type="int" />
          <Property Name="Quantity" Type="int" />
          <Property Name="Price" Type="money" />
          <Property Name="Total" Type="money" />
        </EntityType>
        <!--Errors Found During Generation:
warning 6002: The table/view 'EssenseOfArgan.dbo.TestOrders' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
        <EntityType Name="TestOrders">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="FirstName" Type="varchar" MaxLength="255" />
          <Property Name="LastName" Type="varchar" MaxLength="255" />
          <Property Name="Address" Type="varchar" MaxLength="255" />
          <Property Name="City" Type="varchar" MaxLength="255" />
          <Property Name="State" Type="varchar" MaxLength="255" />
          <Property Name="Country" Type="varchar" MaxLength="255" />
        </EntityType>
        <!--Errors Found During Generation:
warning 6002: The table/view 'EssenseOfArgan.dbo.TestProductCategories' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
        <EntityType Name="TestProductCategories">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="ProductId" Type="int" />
          <Property Name="CategoryId" Type="int" />
        </EntityType>
        <!--Errors Found During Generation:
warning 6002: The table/view 'EssenseOfArgan.dbo.TestProducts' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
        <EntityType Name="TestProducts">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="Name" Type="varchar" MaxLength="255" />
          <Property Name="SKU" Type="varchar" MaxLength="255" />
          <Property Name="Description" Type="varchar" MaxLength="255" />
        </EntityType>
        <Function Name="GetOrders" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo" />
        <EntityContainer Name="EssenseOfArganModelStoreContainer">
          <EntitySet Name="TestCategories" EntityType="Self.TestCategories" store:Type="Tables" store:Schema="dbo">
            <DefiningQuery>SELECT 
    [TestCategories].[id] AS [id], 
    [TestCategories].[Name] AS [Name]
    FROM [dbo].[TestCategories] AS [TestCategories]</DefiningQuery>
          </EntitySet>
          <EntitySet Name="TestOrderProducts" EntityType="Self.TestOrderProducts" store:Type="Tables" store:Schema="dbo">
            <DefiningQuery>SELECT 
    [TestOrderProducts].[id] AS [id], 
    [TestOrderProducts].[OrderId] AS [OrderId], 
    [TestOrderProducts].[ProductId] AS [ProductId], 
    [TestOrderProducts].[Quantity] AS [Quantity], 
    [TestOrderProducts].[Price] AS [Price], 
    [TestOrderProducts].[Total] AS [Total]
    FROM [dbo].[TestOrderProducts] AS [TestOrderProducts]</DefiningQuery>
          </EntitySet>
          <EntitySet Name="TestOrders" EntityType="Self.TestOrders" store:Type="Tables" store:Schema="dbo">
            <DefiningQuery>SELECT 
    [TestOrders].[id] AS [id], 
    [TestOrders].[FirstName] AS [FirstName], 
    [TestOrders].[LastName] AS [LastName], 
    [TestOrders].[Address] AS [Address], 
    [TestOrders].[City] AS [City], 
    [TestOrders].[State] AS [State], 
    [TestOrders].[Country] AS [Country]
    FROM [dbo].[TestOrders] AS [TestOrders]</DefiningQuery>
          </EntitySet>
          <EntitySet Name="TestProductCategories" EntityType="Self.TestProductCategories" store:Type="Tables" store:Schema="dbo">
            <DefiningQuery>SELECT 
    [TestProductCategories].[id] AS [id], 
    [TestProductCategories].[ProductId] AS [ProductId], 
    [TestProductCategories].[CategoryId] AS [CategoryId]
    FROM [dbo].[TestProductCategories] AS [TestProductCategories]</DefiningQuery>
          </EntitySet>
          <EntitySet Name="TestProducts" EntityType="Self.TestProducts" store:Type="Tables" store:Schema="dbo">
            <DefiningQuery>SELECT 
    [TestProducts].[id] AS [id], 
    [TestProducts].[Name] AS [Name], 
    [TestProducts].[SKU] AS [SKU], 
    [TestProducts].[Description] AS [Description]
    FROM [dbo].[TestProducts] AS [TestProducts]</DefiningQuery>
          </EntitySet>
        </EntityContainer>
      </Schema></edmx:StorageModels>
    <!-- CSDL content -->
    <edmx:ConceptualModels>
      <Schema Namespace="EssenseOfArganModel" Alias="Self" annotation:UseStrongSpatialTypes="false" xmlns:annotation="http://schemas.microsoft.com/ado/2009/02/edm/annotation" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm">
        <EntityType Name="TestCategory">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="Name" Type="String" MaxLength="255" FixedLength="false" Unicode="false" />
        </EntityType>
        <EntityType Name="TestOrderProduct">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="OrderId" Type="Int32" />
          <Property Name="ProductId" Type="Int32" />
          <Property Name="Quantity" Type="Int32" />
          <Property Name="Price" Type="Decimal" Precision="19" Scale="4" />
          <Property Name="Total" Type="Decimal" Precision="19" Scale="4" />
        </EntityType>
        <EntityType Name="TestOrder">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="FirstName" Type="String" MaxLength="255" FixedLength="false" Unicode="false" />
          <Property Name="LastName" Type="String" MaxLength="255" FixedLength="false" Unicode="false" />
          <Property Name="Address" Type="String" MaxLength="255" FixedLength="false" Unicode="false" />
          <Property Name="City" Type="String" MaxLength="255" FixedLength="false" Unicode="false" />
          <Property Name="State" Type="String" MaxLength="255" FixedLength="false" Unicode="false" />
          <Property Name="Country" Type="String" MaxLength="255" FixedLength="false" Unicode="false" />
        </EntityType>
        <EntityType Name="TestProduct">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="Name" Type="String" MaxLength="255" FixedLength="false" Unicode="false" />
          <Property Name="SKU" Type="String" MaxLength="255" FixedLength="false" Unicode="false" />
          <Property Name="Description" Type="String" MaxLength="255" FixedLength="false" Unicode="false" />
        </EntityType>
        <EntityContainer Name="EssenseOfArganEntities" annotation:LazyLoadingEnabled="true">
          <EntitySet Name="TestCategories" EntityType="Self.TestCategory" />
          <EntitySet Name="TestOrderProducts" EntityType="Self.TestOrderProduct" />
          <EntitySet Name="TestOrders" EntityType="Self.TestOrder" />
          <EntitySet Name="TestProducts" EntityType="Self.TestProduct" />
          <EntitySet Name="TestProductCategories" EntityType="EssenseOfArganModel.TestProductCategories" />
          <FunctionImport Name="GetOrders" ReturnType="Collection(EssenseOfArganModel.GetOrders_Result)" />
        </EntityContainer>
        <EntityType Name="TestProductCategories">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="ProductId" Type="Int32" />
          <Property Name="CategoryId" Type="Int32" />
        </EntityType>
        <ComplexType Name="GetOrders_Result">
          <Property Type="String" Name="FirstName" Nullable="true" MaxLength="255" />
          <Property Type="String" Name="LastName" Nullable="true" MaxLength="255" />
          <Property Type="String" Name="Address" Nullable="true" MaxLength="255" />
          <Property Type="String" Name="City" Nullable="true" MaxLength="255" />
          <Property Type="String" Name="State" Nullable="true" MaxLength="255" />
          <Property Type="String" Name="Country" Nullable="true" MaxLength="255" />
          <Property Type="Decimal" Name="Price" Nullable="true" Precision="19" />
          <Property Type="String" Name="ProductName" Nullable="true" MaxLength="255" />
          <Property Type="String" Name="ProductSKU" Nullable="true" MaxLength="255" />
          <Property Type="String" Name="Category" Nullable="true" MaxLength="255" />
        </ComplexType>
      </Schema>
    </edmx:ConceptualModels>
    <!-- C-S mapping content -->
    <edmx:Mappings>
      <Mapping Space="C-S" xmlns="http://schemas.microsoft.com/ado/2009/11/mapping/cs">
        <EntityContainerMapping StorageEntityContainer="EssenseOfArganModelStoreContainer" CdmEntityContainer="EssenseOfArganEntities">
          <EntitySetMapping Name="TestCategories">
            <EntityTypeMapping TypeName="EssenseOfArganModel.TestCategory">
              <MappingFragment StoreEntitySet="TestCategories">
                <ScalarProperty Name="id" ColumnName="id" />
                <ScalarProperty Name="Name" ColumnName="Name" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="TestOrderProducts">
            <EntityTypeMapping TypeName="EssenseOfArganModel.TestOrderProduct">
              <MappingFragment StoreEntitySet="TestOrderProducts">
                <ScalarProperty Name="id" ColumnName="id" />
                <ScalarProperty Name="OrderId" ColumnName="OrderId" />
                <ScalarProperty Name="ProductId" ColumnName="ProductId" />
                <ScalarProperty Name="Quantity" ColumnName="Quantity" />
                <ScalarProperty Name="Price" ColumnName="Price" />
                <ScalarProperty Name="Total" ColumnName="Total" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="TestOrders">
            <EntityTypeMapping TypeName="EssenseOfArganModel.TestOrder">
              <MappingFragment StoreEntitySet="TestOrders">
                <ScalarProperty Name="id" ColumnName="id" />
                <ScalarProperty Name="FirstName" ColumnName="FirstName" />
                <ScalarProperty Name="LastName" ColumnName="LastName" />
                <ScalarProperty Name="Address" ColumnName="Address" />
                <ScalarProperty Name="City" ColumnName="City" />
                <ScalarProperty Name="State" ColumnName="State" />
                <ScalarProperty Name="Country" ColumnName="Country" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="TestProducts">
            <EntityTypeMapping TypeName="EssenseOfArganModel.TestProduct">
              <MappingFragment StoreEntitySet="TestProducts">
                <ScalarProperty Name="id" ColumnName="id" />
                <ScalarProperty Name="Name" ColumnName="Name" />
                <ScalarProperty Name="SKU" ColumnName="SKU" />
                <ScalarProperty Name="Description" ColumnName="Description" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="TestProductCategories">
            <EntityTypeMapping TypeName="EssenseOfArganModel.TestProductCategories">
              <MappingFragment StoreEntitySet="TestProductCategories">
                <ScalarProperty Name="CategoryId" ColumnName="CategoryId" />
                <ScalarProperty Name="ProductId" ColumnName="ProductId" />
                <ScalarProperty Name="id" ColumnName="id" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <FunctionImportMapping FunctionImportName="GetOrders" FunctionName="EssenseOfArganModel.Store.GetOrders">
            <ResultMapping>
              <ComplexTypeMapping TypeName="EssenseOfArganModel.GetOrders_Result">
                <ScalarProperty Name="FirstName" ColumnName="FirstName" />
                <ScalarProperty Name="LastName" ColumnName="LastName" />
                <ScalarProperty Name="Address" ColumnName="Address" />
                <ScalarProperty Name="City" ColumnName="City" />
                <ScalarProperty Name="State" ColumnName="State" />
                <ScalarProperty Name="Country" ColumnName="Country" />
                <ScalarProperty Name="Price" ColumnName="Price" />
                <ScalarProperty Name="ProductName" ColumnName="ProductName" />
                <ScalarProperty Name="ProductSKU" ColumnName="ProductSKU" />
                <ScalarProperty Name="Category" ColumnName="Category" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
        </EntityContainerMapping>
      </Mapping>
    </edmx:Mappings>
  </edmx:Runtime>
  <!-- EF Designer content (DO NOT EDIT MANUALLY BELOW HERE) -->
  <Designer xmlns="http://schemas.microsoft.com/ado/2009/11/edmx">
    <Connection>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="MetadataArtifactProcessing" Value="EmbedInOutputAssembly" />
      </DesignerInfoPropertySet>
    </Connection>
    <Options>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="ValidateOnBuild" Value="true" />
        <DesignerProperty Name="EnablePluralization" Value="False" />
        <DesignerProperty Name="IncludeForeignKeysInModel" Value="False" />
        <DesignerProperty Name="UseLegacyProvider" Value="false" />
        <DesignerProperty Name="CodeGenerationStrategy" Value="None" />
      </DesignerInfoPropertySet>
    </Options>
    <!-- Diagram content (shape and connector positions) -->
    <Diagrams></Diagrams>
  </Designer>
</edmx:Edmx>